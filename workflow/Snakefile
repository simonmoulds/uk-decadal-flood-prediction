AGGR = ['yr2', 'yr2to9', 'yr2to9_lag']
EXPM = ['hindcast', 'observed']

rule all:
    input:
        'fig/fig1.png',
        'fig/fig2.png',
        'fig/fig3.png',
        'fig/fig4.png',
        'fig/figS1.png',
        'fig/figS2.png',
        'fig/figS3.png',
        'fig/figS4.png'

rule obs_input:
    input:
        files='config.yml',
        script='../scripts/Python/prepare-observed-input-data.py'
    output:
        'data/obs.parquet'
    params:
        outputdir='data'
    shell:
        """
        python {input.script} -i {input.files} -o {params.outputdir}
        """

rule mod_input:
    input:
        files='config.yml',
        script='../scripts/Python/prepare-modelled-input-data.py'
    output:
        directory('data/ensemble-forecast')
    shell:
        """
        mkdir -p {output}
        python {input.script} -i {input.files} -o {output}
        """

rule get_discharge_data:
    input:
        files='../data-raw/UKBN/UKBN_Station_List_vUKBN2.0_1.csv',
        script='../scripts/R/download-discharge-data.R'
    output:
        directory('data/nrfa-discharge-summaries')
    shell:
        """
        Rscript {input.script} {input.files} {output}
        """

rule nao_matching:
    input:
        'data/obs.parquet',
        'data/ensemble-forecast',
        'data/nrfa-discharge-summaries',
        files='config.yml',
        script='../scripts/R/perform-nao-matching.R'
    output:
        'data/analysis/{aggr}/obs_study_period.parquet',
        'data/analysis/{aggr}/ensemble_fcst.parquet',
        'data/analysis/{aggr}/ensemble_mean_fcst.parquet',
        'data/analysis/{aggr}/matched_ensemble.parquet',
        'data/analysis/{aggr}/matched_ensemble_error.parquet'
    params:
        outputdir='data/analysis'
    shell:
        """
        Rscript {input.script} {input.files} {wildcards.aggr} {params.outputdir}
        """

rule build_catchment_dataset:
    input:
        'data/nrfa-discharge-summaries',
        'data/obs.parquet',
        expand('data/analysis/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        expand('data/analysis/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
        files='config.yml',
        script='../scripts/R/build-catchment-dataset.R'
    output:
        directory('data/analysis/{aggr}/input')
    params:
        outputdir='data'
    shell:
        """
        Rscript {input.script} {input.files} {wildcards.aggr} {params.outputdir}
        """

rule fit_models:
    input:
        expand('data/analysis/{aggr}/input', aggr = AGGR),
        files='config.yml',
        script='../scripts/R/fit-models.R'
    output:
        directory('data/analysis/{expm}')
    wildcard_constraints:
        expm='|'.join([re.escape(x) for x in EXPM])
    params:
        outputdir='data'
    shell:
        """
        Rscript {input.script} {input.files} {wildcards.expm} {params.outputdir}
        """

rule make_plots:
    input:
        expand('data/analysis/{expm}', expm = EXPM),
        files='config.yml',
        script='../scripts/R/evaluate-models.R'
    output:
        'fig/fig1.png',
        'fig/fig2.png',
        'fig/fig3.png',
        'fig/fig4.png',
        'fig/figS1.png',
        'fig/figS2.png',
        'fig/figS3.png',
        'fig/figS4.png'
    params:
        outputdir='fig'
    shell:
        """
        Rscript {input.script} {input.files} {params.outputdir}
        """
