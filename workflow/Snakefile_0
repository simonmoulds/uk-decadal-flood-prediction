import os

# CONFIG = 'config/config_2.yml'
# configfile: CONFIG

INTERMEDIATE_DIRECTORY = os.path.join('results/intermediate')
STATIONS_FILE = 'resources/station_list_with_grid_coords.parquet'
GRID_FILE = 'resources/grid.nc'
OBSERVED_DATA = os.path.join(
    INTERMEDIATE_DIRECTORY, 'observed.parquet'
)
ENSEMBLE_FORECAST_DATA = os.path.join(
    INTERMEDIATE_DIRECTORY, 'ensemble-forecast'
)
OBSERVED_FIELD_DATA = os.path.join(
    INTERMEDIATE_DIRECTORY, 'observed-field.parquet'
)
ENSEMBLE_FORECAST_FIELD_DATA = os.path.join(
    INTERMEDIATE_DIRECTORY, 'ensemble-forecast-field'
)

# rule all:
#     input:
#         OBSERVED_DATA,
#         # ENSEMBLE_FORECAST_DATA,
#         OBSERVED_FIELD_DATA
#         # ENSEMBLE_FORECAST_FIELD_DATA

rule obs_input:
    output:
        touch('results/obs_input.done'),
        OBSERVED_DATA
    params:
        outputdir=INTERMEDIATE_DIRECTORY
    conda:
        'envs/conda_environment_base.yml'
    resources:
        time = "00:30:00",
        mem_mb = 32000,
        cpus_per_task = 16,
        partition = "short"
    script:
        'decadal-prediction-scripts/Python/prepare-observed-input-data.py'

rule mod_input:
    output:
        touch('results/mod_input.done'),
        directory(ENSEMBLE_FORECAST_DATA)
    params:
        outputdir=INTERMEDIATE_DIRECTORY
    conda:
        'envs/conda_environment_base.yml'
    resources:
        time = "03:00:00",
        mem_mb = 32000,
        # cpus_per_task = 16,
        partition = "short"
    script:
        'decadal-prediction-scripts/Python/prepare-modelled-input-data.py'

rule obs_field_input:
    input:
        'results/obs_input.done',
        stations=STATIONS_FILE,
        grid=GRID_FILE
    output:
        touch('results/obs_field_input.done'),
        OBSERVED_FIELD_DATA
    params:
        outputdir=INTERMEDIATE_DIRECTORY
    conda:
        'envs/conda_environment_base.yml'
    resources:
        time = "03:00:00",
        mem_mb = 32000,
        # cpus_per_task = 16,
        partition = "short"
    script:
        'decadal-prediction-scripts/Python/prepare-observed-field-input-data.py'

rule mod_field_input:
    input:
        'results/mod_input.done',
        stations=STATIONS_FILE,
        grid=GRID_FILE
    output:
        touch('results/mod_field_input.done'),
        directory(ENSEMBLE_FORECAST_FIELD_DATA)
    params:
        outputdir=INTERMEDIATE_DIRECTORY
    conda:
        'envs/conda_environment_base.yml'
    resources:
        time = "03:00:00",
        mem_mb = 32000,
        # cpus_per_task = 16,
        partition = "short"
    script:
        'decadal-prediction-scripts/Python/prepare-modelled-field-input-data.py'
