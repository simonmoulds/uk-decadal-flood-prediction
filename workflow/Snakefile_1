import os

include: 'Snakefile_0'

configfile: 'config/config_1.yml'

# RESULTS_DIRECTORY = 'results'#config['output_data']
# INTERMEDIATE_DIRECTORY = os.path.join(RESULTS_DIRECTORY, 'intermediate')
# OBSERVED_DATA_FILE = os.path.join(INTERMEDIATE_DIRECTORY, 'obs.parquet')
# ENSEMBLE_FORECAST_DATA_DIRECTORY = os.path.join(INTERMEDIATE_DIRECTORY, 'ensemble-forecast')

AGGR = ['yr2', 'yr2to9', 'yr2to9_lag', 'yr2to5', 'yr2to5_lag']
AGGR_PLOT = ['yr2to5_lag']
EXPM = ['hindcast', 'observed']

STATIONS_FILE = 'results/stations.txt'
NRFA_DISCHARGE_DIRECTORY = 'results/nrfa-discharge-summaries'
NRFA_METADATA_FILE = 'results/nrfa-metadata.parquet'
ANALYSIS_DIRECTORY = 'results/analysis'

rule all:
    input:
        expand(ANALYSIS_DIRECTORY + '/{aggr}/observed.parquet', aggr = AGGR),
        expand(ANALYSIS_DIRECTORY + '/{aggr}/ensemble_forecast.parquet', aggr = AGGR),
        expand('results/fig/{aggr_plot}', aggr_plot = AGGR_PLOT)

rule select_stations:
    output:
        STATIONS_FILE
    params:
        outfile=STATIONS_FILE
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/select-stations-exp1.R'

rule get_discharge_data:
    input:
        stations=STATIONS_FILE
    output:
        directory(NRFA_DISCHARGE_DIRECTORY),
        NRFA_METADATA_FILE
    params:
        outputdir='results'
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/download-discharge-data.R'

rule prepare_input_data:
    input:
        obs=OBSERVED_DATA_FILE,
        fcst=ENSEMBLE_FORECAST_DATA_DIRECTORY
    output:
        ANALYSIS_DIRECTORY + '/{aggr}/observed.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_forecast.parquet'
    params:
        outputdir=ANALYSIS_DIRECTORY
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/prepare-input-data.R'

rule nao_matching:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        obs=ANALYSIS_DIRECTORY + '/{aggr}/observed.parquet',
        fcst=ANALYSIS_DIRECTORY + '/{aggr}/ensemble_forecast.parquet'
    output:
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_mean_fcst.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet'
    params:
        outputdir=ANALYSIS_DIRECTORY
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/perform-nao-matching.R'

rule build_catchment_dataset:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
        obs=OBSERVED_DATA_FILE,
        metadata=NRFA_METADATA_FILE
    output:
        directory(ANALYSIS_DIRECTORY + '/{aggr}/input')
    params:
        outputdir='results'
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/build-catchment-dataset.R'

rule fit_gamlss_models:
    input:
        expand(ANALYSIS_DIRECTORY + '/{aggr}/input', aggr = AGGR)
    output:
        directory(ANALYSIS_DIRECTORY + '/{expm}/gamlss/{aggr}')
    params:
        method='cv',
        outputdir='results'
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/fit-gamlss-models.R'

rule make_plots:
    input:
        expand(ANALYSIS_DIRECTORY + '/{expm}/gamlss/{aggr}', expm = EXPM, aggr = AGGR)
    output:
        directory('results/fig/{aggr_plot}')
    wildcard_constraints:
        aggr_plot='|'.join([aggr for aggr in AGGR_PLOT])
    params:
        outputdir='results'
    resources:
        time = "01:00:00",
        mem_mb = 8000,
        partition = "short"
    script:
        'decadal-prediction-scripts/R/make-plots-exp1.R'
