import os

CONFIG = 'config/config.yml'
configfile: CONFIG

include: 'Snakefile_0'

AGGR = ['yr2', 'yr2to9', 'yr2to9_lag', 'yr2to5_lag']
EXPM = ['hindcast', 'observed']

EXP1_DIRECTORY = os.path.join(RESULTS_DIRECTORY, 'exp1')
STATIONS_FILE = os.path.join(EXP1_DIRECTORY, 'stations.txt')
NRFA_DISCHARGE_DIRECTORY = os.path.join(EXP1_DIRECTORY, 'nrfa-discharge-summaries')
NRFA_METADATA_FILE = os.path.join(EXP1_DIRECTORY, 'nrfa-metadata.parquet')
ANALYSIS_DIRECTORY = os.path.join(EXP1_DIRECTORY, 'analysis')

rule all:
    input:
        'results/exp1/fig/fig1.png',
        'results/exp1/fig/fig2.png',
        'results/exp1/fig/fig3.png',
        'results/exp1/fig/fig4.png',
        'results/exp1/fig/figS1.png',
        'results/exp1/fig/figS2.png',
        'results/exp1/fig/figS3.png',
        'results/exp1/fig/figS4.png'

# rule select_stations:
#     input:
#         script='workflow/scripts/select-stations-exp1.R',
#         config='config/config.yml'
#     output:
#         'results/exp1/stations.txt'
#     shell:
#         """
#         Rscript {input.script} {input.config} {output}
#         """
rule select_stations:
    input:
        script='workflow/scripts/select-stations-exp1.R',
        config=CONFIG
    output:
        STATIONS_FILE
    params:
        outfile=STATIONS_FILE
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {config[input_data_root]} {params.outfile} {input.config}
        """

# rule get_discharge_data:
#     input:
#         stations='results/exp1/stations.txt',
#         script='workflow/scripts/external/R/download-discharge-data.R'
#     output:
#         directory('results/exp1/nrfa-discharge-summaries')
#     params:
#         outputdir='results/exp1'
#     shell:
#         """
#         Rscript {input.script} {input.stations} {params.outputdir}
#         """
rule get_discharge_data:
    input:
        stations=STATIONS_FILE,
        script='workflow/scripts/download-discharge-data.R'
    output:
        directory(NRFA_DISCHARGE_DIRECTORY),
        NRFA_METADATA_FILE
    params:
        outputdir=EXP1_DIRECTORY
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.stations} {params.outputdir}
        """

# rule nao_matching:
#     input:
#         'results/exp1/nrfa-discharge-summaries',
#         script='workflow/scripts/external/R/perform-nao-matching.R',
#         config='config/config.yml',
#         obs='results/intermediate/obs.parquet',
#         fcst='results/intermediate/ensemble-forecast'
#     output:
#         'results/exp1/analysis/{aggr}/obs_study_period.parquet',
#         'results/exp1/analysis/{aggr}/ensemble_fcst.parquet',
#         'results/exp1/analysis/{aggr}/ensemble_mean_fcst.parquet',
#         'results/exp1/analysis/{aggr}/matched_ensemble.parquet',
#         'results/exp1/analysis/{aggr}/matched_ensemble_error.parquet'
#     params:
#         outputdir='results/exp1/analysis'
#     shell:
#         """
#         Rscript {input.script} {input.config} {input.obs} {input.fcst} {wildcards.aggr} {params.outputdir}
#         """
rule nao_matching:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        script='workflow/scripts/perform-nao-matching.R',
        config='config/config.yml',
        obs=OBSERVED_DATA_FILE,
        fcst=ENSEMBLE_FORECAST_DATA_DIRECTORY
    output:
        ANALYSIS_DIRECTORY + '/{aggr}/obs_study_period.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_fcst.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_mean_fcst.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet'
    params:
        outputdir=ANALYSIS_DIRECTORY
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {input.fcst} {wildcards.aggr} {params.outputdir}
        """

# rule build_catchment_dataset:
#     input:
#         'results/intermediate/obs.parquet',
#         'results/exp1/nrfa-discharge-summaries',
#         expand('results/exp1/analysis/{aggr}/matched_ensemble.parquet', aggr = AGGR),
#         expand('results/exp1/analysis/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
#         script='workflow/scripts/external/R/build-catchment-dataset.R',
#         config='config/config.yml',
#         obs='results/intermediate/obs.parquet'
#     output:
#         directory('results/exp1/analysis/{aggr}/input')
#     params:
#         outputdir='results/exp1'
#     shell:
#         """
#         Rscript {input.script} {input.config} {input.obs} {wildcards.aggr} {params.outputdir}
#         """
rule build_catchment_dataset:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
        script='workflow/scripts/build-catchment-dataset.R',
        config='config/config.yml',
        obs=OBSERVED_DATA_FILE
    output:
        directory(ANALYSIS_DIRECTORY + '/{aggr}/input')
    params:
        outputdir=EXP2_DIRECTORY
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {wildcards.aggr} {params.outputdir}
        """

# rule fit_gamlss_models:
#     input:
#         expand('results/exp1/analysis/{aggr}/input', aggr = AGGR),
#         script='workflow/scripts/fit-gamlss-models.R',
#         config='config/config.yml'
#     output:
#         directory('results/exp1/analysis/{expm}')
#     wildcard_constraints:
#         expm='|'.join([re.escape(x) for x in EXPM])
#     params:
#         method='cv',
#         outputdir='results/exp1'
#     shell:
#         """
#         Rscript {input.script} {input.config} {wildcards.expm} {params.method} {params.outputdir}
#         """
rule fit_gamlss_models:
    input:
        expand(ANALYSIS_DIRECTORY + '/{aggr}/input', aggr = AGGR),
        script='workflow/scripts/fit-gamlss-models.R',
        config='config/config.yml'
    output:
        directory(ANALYSIS_DIRECTORY + '/{expm}')
        # directory('results/exp2/analysis/hindcast/gamlss/{aggr}')
    wildcard_constraints:
        expm='|'.join([re.escape(x) for x in EXPM])
    params:
        # experiment='hindcast',
        # aggregation_period='yr2',
        method='forward',
        outputdir=EXP2_DIRECTORY
        # outputdir='results/exp2'
    # conda:
    #     'decadal-flood-prediction'
    shell:
        """
        Rscript {input.script} {input.config} {wildcards.expm} {wildcards.aggr} {params.method} {params.outputdir}
        """

rule make_plots:
    input:
        expand('results/exp1/analysis/{expm}', expm = EXPM),
        script='workflow/scripts/external/R/evaluate-models.R',
        config='config/config.yml'
    output:
        'results/exp1/fig/fig1.png',
        'results/exp1/fig/fig2.png',
        'results/exp1/fig/fig3.png',
        'results/exp1/fig/fig4.png',
        'results/exp1/fig/figS1.png',
        'results/exp1/fig/figS2.png',
        'results/exp1/fig/figS3.png',
        'results/exp1/fig/figS4.png'
    params:
        outputdir='results/exp1'
    shell:
        """
        Rscript {input.script} {input.config} {params.outputdir}
        """

