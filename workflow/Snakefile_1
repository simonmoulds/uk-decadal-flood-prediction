import os

CONFIG = 'config/config.yml'
configfile: CONFIG

include: 'Snakefile_0'

AGGR = ['yr2', 'yr2to9', 'yr2to9_lag', 'yr2to5', 'yr2to5_lag', 'yr6to9', 'yr6to9_lag']
# AGGR_PLOT = ['yr2', 'yr2to9_lag', 'yr2to5_lag']
AGGR_PLOT = ['yr2', 'yr2to5_lag', 'yr2to9_lag', 'yr6to9_lag']
EXPM = ['hindcast', 'observed']

EXP1_DIRECTORY = os.path.join(RESULTS_DIRECTORY, 'exp1')
STATIONS_FILE = os.path.join(EXP1_DIRECTORY, 'stations.txt')
NRFA_DISCHARGE_DIRECTORY = os.path.join(EXP1_DIRECTORY, 'nrfa-discharge-summaries')
NRFA_METADATA_FILE = os.path.join(EXP1_DIRECTORY, 'nrfa-metadata.parquet')
ANALYSIS_DIRECTORY = os.path.join(EXP1_DIRECTORY, 'analysis')

rule all:
    input:
        expand('results/exp1/fig/{aggr_plot}', aggr_plot = AGGR_PLOT)

rule select_stations:
    input:
        script='workflow/scripts/select-stations-exp1.R',
        config=CONFIG
    output:
        STATIONS_FILE
    params:
        outfile=STATIONS_FILE
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {config[input_data_root]} {params.outfile} {input.config}
        """

rule get_discharge_data:
    input:
        stations=STATIONS_FILE,
        script='workflow/scripts/download-discharge-data.R'
    output:
        directory(NRFA_DISCHARGE_DIRECTORY),
        NRFA_METADATA_FILE
    params:
        outputdir=EXP1_DIRECTORY
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.stations} {params.outputdir}
        """

rule nao_matching:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        script='workflow/scripts/perform-nao-matching.R',
        config='config/config.yml',
        obs=OBSERVED_DATA_FILE,
        fcst=ENSEMBLE_FORECAST_DATA_DIRECTORY
    output:
        ANALYSIS_DIRECTORY + '/{aggr}/obs_study_period.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_fcst.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/ensemble_mean_fcst.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet',
        ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet'
    params:
        outputdir=ANALYSIS_DIRECTORY
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {input.fcst} {wildcards.aggr} {params.outputdir}
        """

rule build_catchment_dataset:
    input:
        NRFA_DISCHARGE_DIRECTORY,
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble.parquet', aggr = AGGR),
        expand(ANALYSIS_DIRECTORY + '/{aggr}/matched_ensemble_error.parquet', aggr = AGGR),
        script='workflow/scripts/build-catchment-dataset.R',
        config='config/config.yml',
        obs=OBSERVED_DATA_FILE
    output:
        directory(ANALYSIS_DIRECTORY + '/{aggr}/input')
    params:
        outputdir=EXP1_DIRECTORY
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.config} {input.obs} {wildcards.aggr} {params.outputdir}
        """

rule fit_gamlss_models:
    input:
        expand(ANALYSIS_DIRECTORY + '/{aggr}/input', aggr = AGGR),
        script='workflow/scripts/fit-gamlss-models.R',
        config='config/config.yml'
    output:
        directory(ANALYSIS_DIRECTORY + '/{expm}/gamlss/{aggr}')
    params:
        method='cv',
        outputdir=EXP1_DIRECTORY
    resources:
        time = "01:00:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.config} {wildcards.expm} {wildcards.aggr} {params.method} {params.outputdir}
        """

rule make_plots:
    input:
        expand(ANALYSIS_DIRECTORY + '/{expm}/gamlss/{aggr}', expm = EXPM, aggr = AGGR),
        script='workflow/scripts/make-plots-exp1.R',
        config='config/config.yml'
    output:
        directory('results/exp1/fig/{aggr_plot}')
    wildcard_constraints:
        aggr_plot='|'.join([aggr for aggr in AGGR_PLOT])
    params:
        outputdir='results/exp1'
    resources:
        time = "00:30:00",
        mem_mb = 4000,
        partition = "short"
    shell:
        """
        Rscript {input.script} {input.config} {wildcards.aggr_plot} {params.outputdir}
        """

